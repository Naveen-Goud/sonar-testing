name: SonarCloud Frontend
on:
  push:
    branches:
      - main # change it to your main branch.
    paths:
      - "frontend/src/**" # give the frontend folder name.
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  sonarscan:
    if: ( startsWith(github.head_ref, 'FE_') && github.event.pull_request.merged == false ) || ( github.event_name == 'push' )
    name: FE Sonar Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10 # Give the value at most 8 mins.
    defaults:
      run:
        working-directory: app/client # Change the working directory to your frontend folder name.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better relevancy of analysis.

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ github.workspace }}/app/client/node_modules # Change the path to the node_modules folder.
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}

      - name: Install Node.js 20.11.1
        uses: actions/setup-node@v2
        with:
          node-version: "20.11.1"

      - name: Install the dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

      - name: Test and coverage
        run: npm jest --coverage
      - name: SonarCloud Scan
        with:
          projectBaseDir: frontend/src # Keep the projectBaseDir same as the working directory.
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Change the token name accordingly.
      - name: Check SonarCloud Quality Gate
        run: |
          echo "Checking SonarCloud Quality Gate status..."
          sleep 30  # Ensure that the analysis is complete
          SONAR_STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=naveengoud_sonar-appsmith" | jq -r '.projectStatus.status')
          if [ "$SONAR_STATUS" = "ERROR" ]; then
            echo "Quality gate failed!"
            exit 1
          else
            echo "Quality gate passed!"
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}